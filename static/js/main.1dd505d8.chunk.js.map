{"version":3,"sources":["Board.js","actions/snackbarActions.js","actions/types.js","actions/filterActions.js","searchEvent.js","Navbar.js","AddEvent.js","Login.js","config/keys.js","modules/counter.js","modules/tableReducer.js","modules/snackbarReducer.js","store.js","MessageBar.js","EventWordCloud.js","index.js"],"names":["columns","id","label","Board","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onColumnHeaderClick","columnId","event","state","sortCol","setState","sortDir","length","row","dateFrom","dateTo","oDateFrom","Date","toMillis","oDateTo","monthArray","getUTCDate","getUTCMonth","getUTCFullYear","_this2","_this$props","classes","events","requesting","list","table","_this$state","rows","orderBy","filter","name","includes","tableFilterText","react_default","a","createElement","style","marginTop","index_es","container","styles","justify","item","className","root","padding","map","col","key","sortDirection","title","placement","enterDelay","active","direction","onClick","component","href","url","target","rel","getDate","date","venue","description","React","Component","compose","firestoreConnect","collection","connect","firestore","ordered","status","withStyles","theme","width","spacing","unit","overflowX","minWidth","toggleSnackbar","text","dispatch","type","payload","applyFilter","filterText","suggestions","data","renderInputComponent","inputProps","_inputProps$inputRef","inputRef","ref","other","objectWithoutProperties","TextField_default","assign","fullWidth","InputProps","node","input","renderSuggestion","suggestion","_ref","query","isHighlighted","matches","match","parts","parse","MenuItem_default","selected","part","index","highlight","String","fontWeight","getSuggestionValue","IntegrationAutosuggest","single","popper","handleSuggestionsFetchRequested","_ref2","value","inputValue","deburr","trim","toLowerCase","inputLength","count","keep","slice","getSuggestions","handleSuggestionsClearRequested","handleChange","_ref3","newValue","defineProperty","update","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","dist_default","placeholder","onChange","suggestionsContainerOpen","suggestionsList","renderSuggestionsContainer","options","Paper_default","containerProps","square","children","height","flexGrow","position","zIndex","left","right","display","margin","listStyleType","divider","NavBar","handleFilterReset","handleSnackClose","onLogout","firebase","logout","then","_this$props2","auth","open","openLogin","menuButton","color","aria-label","Menu_default","variant","grow","search","searchIcon","Search_default","searchEvent","bind","uid","firebaseConnect","marginLeft","marginRight","borderRadius","background","&:hover","backgroundColor","paddingLeft","pointerEvents","fontFamily","alignItems","justifyContent","initialState","keyword","tags","AddEvent","reset","handleDelete","toConsumableArray","chipToDelete","indexOf","splice","handleSubmit","newEvent","add","res","catch","err","console","log","handleClose","close","keyPress","assertThisInitialized","e","keyCode","keywords","find","chipDataLength","lastChipKey","push","toUpperCase","onEscapeKeyDown","onBackdropClick","onClose","aria-labelledby","onDelete","chip","onKeyDown","Login","onSnackClose","handleLogin","loading","email","password","login","finally","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","isIncrementing","isDecrementing","isSnackbarOpen","snackBarText","initializeApp","settings","timestampsInSnapshots","createStoreWithFirebase","reactReduxFirebase","userProfile","useFireStoreForProfile","reduxFirestore","createStore","rootReducer","combineReducers","firebaseReducer","firestoreReducer","counter","arguments","undefined","objectSpread","action","snackbar","middleware","applyMiddleware","thunk","store","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","MessageBar","snackMessage","autoHideDuration","message","EventWordCloud","onWordClick","word","eventTagMap","_loop","eventWords","i","tag","j","eventData","k","App","initState","updateList","filterList","openForm","openLoginForm","closeForm","es","Navbar","src_EventWordCloud","src_Board","src_AddEvent","src_Login","src_MessageBar","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.1dd505d8.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  withStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Tooltip,\n  TableSortLabel,\n  Paper,\n  CircularProgress,\n  Grid\n} from \"@material-ui/core/\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { orderBy } from \"lodash\";\n\nimport \"./styles.css\";\n// import data from \"./data.json\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 700\n  }\n});\n\nconst columns = [\n  { id: \"name\", label: \"Name\" },\n  { id: \"date\", label: \"Date\" },\n  { id: \"venue\", label: \"Venue\" },\n  { id: \"description\", label: \"Description\" }\n];\n\n// const data = [\n//   { text: \"Hey\", value: 1000 },\n//   { text: \"lol\", value: 200 },\n//   { text: \"first impression\", value: 800 },\n//   { text: \"very cool\", value: 1000000 },\n//   { text: \"duck\", value: 10 }\n// ];\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortDir: \"asc\",\n      sortCol: columns && columns.length && columns[0][\"id\"]\n    };\n  }\n  getDate(row) {\n    if (!row.dateFrom || !row.dateTo) {\n      return;\n    }\n    const oDateFrom = new Date(row.dateFrom.toMillis());\n    const oDateTo = new Date(row.dateTo.toMillis());\n\n    const monthArray = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sept\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ];\n    return (\n      oDateFrom.getUTCDate() +\n      \" \" +\n      monthArray[oDateFrom.getUTCMonth()] +\n      \" \" +\n      oDateFrom.getUTCFullYear() +\n      \" to \" +\n      oDateTo.getUTCDate() +\n      \" \" +\n      monthArray[oDateTo.getUTCMonth()] +\n      \" \" +\n      oDateTo.getUTCFullYear()\n    );\n  }\n\n  onColumnHeaderClick = columnId => event => {\n    if (columnId !== this.state.sortCol) {\n      //If the column is clicked on for the first time, just make it active\n      this.setState({ sortCol: columnId });\n    } else {\n      //Toggle the direction based on subsequent column clicks\n      if (this.state.sortDir === \"asc\") {\n        this.setState({ sortDir: \"desc\" });\n      } else {\n        this.setState({ sortDir: \"asc\" });\n      }\n    }\n  };\n\n  render() {\n    const { classes, events, requesting, list, table } = this.props;\n    const { sortDir, sortCol } = this.state;\n\n    //Get rows either from firebase or local mock json, and provide a sorter\n    const rows =\n      (events &&\n        orderBy(\n          events.filter(event => event.name.includes(table.tableFilterText)),\n          sortCol === \"date\" ? \"dateFrom\" : sortCol,\n          sortDir\n        )) ||\n      (list && orderBy(list, sortCol, sortDir));\n\n    return (\n      <div>\n        {requesting === true ? (\n          <div style={{ marginTop: \"50px\" }}>\n            <Grid container styles={{ marginTop: \"20px\" }} justify=\"center\">\n              <Grid item>\n                <CircularProgress />\n              </Grid>\n            </Grid>\n          </div>\n        ) : (\n          <Paper className={classes.root}>\n            <Table className={classes.table} padding=\"dense\">\n              <TableHead className=\"THeader\">\n                <TableRow>\n                  {columns &&\n                    columns.map(col => (\n                      <TableCell\n                        key={col.id}\n                        padding=\"default\"\n                        sortDirection={sortDir}\n                      >\n                        <Tooltip\n                          title=\"Sort\"\n                          placement={\"bottom-start\"}\n                          enterDelay={300}\n                        >\n                          <TableSortLabel\n                            name={col.id}\n                            active={sortCol === col.id ? true : false}\n                            direction={sortDir}\n                            onClick={this.onColumnHeaderClick(col.id)}\n                          >\n                            {col.label}\n                          </TableSortLabel>\n                        </Tooltip>\n                      </TableCell>\n                    ))}\n                </TableRow>\n              </TableHead>\n              <TableBody className=\"TableBody\">\n                {rows &&\n                  rows.map(row => {\n                    return (\n                      <TableRow key={row.id}>\n                        <TableCell component=\"th\">\n                          <a\n                            id={row.id}\n                            href={row.url}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"WebsiteLink\"\n                            // onClick={this.onWebsiteClick.bind(this)}\n                          >\n                            {row.name}\n                          </a>\n                        </TableCell>\n                        <TableCell>{this.getDate(row) || row.date}</TableCell>\n                        <TableCell>{row.venue}</TableCell>\n                        <TableCell>{row.description}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </Paper>\n        )}\n      </div>\n    );\n  }\n}\n\nBoard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  requesting: PropTypes.bool.isRequired,\n  events: PropTypes.array,\n  list: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  events: state.firestore.ordered.events,\n  requesting: state.firestore.status.requesting.events,\n  table: state.table\n});\n\nexport default compose(\n  firestoreConnect([{ collection: \"events\" }]),\n  connect(mapStateToProps)\n)(withStyles(styles)(Board));\n","import { TOGGLE_SNACKBAR } from \"./types\";\n\nexport const toggleSnackbar = text => dispatch => {\n  dispatch({\n    type: TOGGLE_SNACKBAR,\n    payload: text\n  });\n};\n","export const TOGGLE_SNACKBAR = \"TOGGLE_SNACKBAR\";\nexport const APPLY_FILTER = \"APPLY_FILTER\";\n","import { APPLY_FILTER } from \"./types\";\n\nexport const applyFilter = filterText => dispatch => {\n  dispatch({\n    type: APPLY_FILTER,\n    payload: filterText\n  });\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport deburr from \"lodash/deburr\";\nimport Autosuggest from \"react-autosuggest\";\nimport match from \"autosuggest-highlight/match\";\nimport parse from \"autosuggest-highlight/parse\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport data from \"./data.json\";\n\nconst suggestions = data;\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputRef: node => {\n          ref(node);\n          inputRef(node);\n        },\n        classes: {\n          input: classes.input\n        }\n      }}\n      {...other}\n    />\n  );\n}\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n  const matches = match(suggestion.name, query);\n  const parts = parse(suggestion.name, matches);\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      <div>\n        {parts.map((part, index) => {\n          return part.highlight ? (\n            <span key={String(index)} style={{ fontWeight: 500 }}>\n              {part.text}\n            </span>\n          ) : (\n            <strong key={String(index)} style={{ fontWeight: 300 }}>\n              {part.text}\n            </strong>\n          );\n        })}\n      </div>\n    </MenuItem>\n  );\n}\n\nfunction getSuggestions(value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : suggestions.filter(suggestion => {\n        const keep =\n          count < 5 &&\n          suggestion.name.slice(0, inputLength).toLowerCase() === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nconst styles = theme => ({\n  root: {\n    height: 30,\n    flexGrow: 1\n  },\n  container: {\n    position: \"relative\"\n  },\n  suggestionsContainerOpen: {\n    position: \"absolute\",\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0\n  },\n  suggestion: {\n    display: \"block\"\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: \"none\"\n  },\n  divider: {\n    height: theme.spacing.unit * 2\n  }\n});\n\nclass IntegrationAutosuggest extends React.Component {\n  state = {\n    single: \"\",\n    popper: \"\",\n    suggestions: []\n  };\n\n  handleSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value)\n    });\n  };\n\n  handleSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  handleChange = name => (event, { newValue }) => {\n    this.setState({\n      [name]: newValue\n    });\n    this.props.update(newValue);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    const autosuggestProps = {\n      renderInputComponent,\n      suggestions: this.state.suggestions,\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n      getSuggestionValue,\n      renderSuggestion\n    };\n\n    return (\n      <div className={classes.root}>\n        <Autosuggest\n          {...autosuggestProps}\n          inputProps={{\n            classes,\n            placeholder: \"Search an Event \",\n            value: this.state.single,\n            onChange: this.handleChange(\"single\")\n          }}\n          theme={{\n            container: classes.container,\n            suggestionsContainerOpen: classes.suggestionsContainerOpen,\n            suggestionsList: classes.suggestionsList,\n            suggestion: classes.suggestion\n          }}\n          renderSuggestionsContainer={options => (\n            <Paper {...options.containerProps} square>\n              {options.children}\n            </Paper>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nIntegrationAutosuggest.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(IntegrationAutosuggest);\n","import React from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport {\n  withStyles,\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  IconButton\n} from \"@material-ui/core/\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport PropTypes from \"prop-types\";\n\nimport { toggleSnackbar } from \"./actions/snackbarActions\";\nimport { applyFilter } from \"./actions/filterActions\";\n\nimport SearchEvent from \"./searchEvent\";\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n\n  search: {\n    position: \"relative\",\n    borderRadius: 1,\n    background: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: \"lighten(rgba(255,0,255,1),50%)\"\n    },\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    width: \"20%\",\n    paddingLeft: \"5px !important\",\n    // left: \"-40%\"\n  },\n  searchIcon: {\n    width: 4 * 9,\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    fontFamily: \"Roboto\",\n    display: \"flex\",\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-center\",\n    marginLeft: \"90%\"\n  }\n};\n\nclass NavBar extends React.Component {\n  handleFilterReset = () => {\n    this.props.applyFilter(\"\");\n  };\n  handleSnackClose = () => {\n    toggleSnackbar(\"\");\n  };\n  onLogout = () => {\n    const { firebase, toggleSnackbar } = this.props;\n    firebase.logout().then(() => {\n      toggleSnackbar(\"Logout Successful\");\n    });\n  };\n\n  render() {\n    const { classes, auth, open, openLogin, update, table } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Tech Conferences\n            </Typography>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <SearchEvent update={update} />\n            </div>\n            {table.tableFilterText !== \"\" ? (\n              <Button\n                variant=\"text\"\n                className=\"NavButton\"\n                onClick={this.handleFilterReset.bind(this)}\n              >\n                Reset Filters\n              </Button>\n            ) : null}\n            {auth.uid ? (\n              <Button variant=\"text\" className=\"NavButton\" onClick={open}>\n                Add Event\n              </Button>\n            ) : null}\n            {!auth.uid ? (\n              <Button variant=\"text\" className=\"NavButton\" onClick={openLogin}>\n                Login\n              </Button>\n            ) : null}\n            {auth.uid ? (\n              <Button\n                variant=\"text\"\n                className=\"NavButton\"\n                onClick={this.onLogout}\n              >\n                Logout\n              </Button>\n            ) : null}\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nNavBar.propTypes = {\n  firebase: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  toggleSnackbar: PropTypes.func.isRequired,\n  applyFilter: PropTypes.func.isRequired,\n  table: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  table: state.table\n});\nexport default compose(\n  firebaseConnect(),\n  connect(\n    mapStateToProps,\n    {\n      toggleSnackbar,\n      applyFilter\n    }\n  )\n)(withStyles(styles)(NavBar));\n","import React from \"react\";\nimport {\n  TextField,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Chip\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"./actions/snackbarActions\";\n\nconst initialState = {\n  dateFrom: Date(),\n  dateTo: Date(),\n  name: \"\",\n  url: \"\",\n  venue: \"\",\n  description: \"\",\n  keyword: \"\",\n  tags: []\n};\nconst styles = theme => ({\n  chip: {\n    margin: theme.spacing.unit / 2,\n    marginTop: theme.spacing.unit\n  }\n});\nclass AddEvent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.keyPress = this.keyPress.bind(this);\n  }\n\n  reset = () => {\n    this.setState(initialState);\n  };\n\n  keyPress(e) {\n    if (e.keyCode === 13) {\n      const value = e.target.value;\n      const keywords = this.state.tags;\n      const isKeywordPresent = keywords.find(keyword => {\n        return keyword.label.toLowerCase() === value.toLowerCase();\n      });\n\n      if (!isKeywordPresent && value !== \"\") {\n        this.setState(state => {\n          const tags = keywords;\n          const keyword = \"\";\n          const chipDataLength = tags.length;\n          const lastChipKey =\n            chipDataLength > 0 ? tags[chipDataLength - 1].key : -1;\n          tags.push({ key: lastChipKey + 1, label: value.toUpperCase() });\n          return { tags, keyword };\n        });\n      }\n    }\n  }\n  handleChange = event => {\n    this.setState({ [event.target.id]: event.target.value });\n  };\n  handleDelete = data => () => {\n    this.setState(state => {\n      const tags = [...state.tags];\n\n      const chipToDelete = tags.indexOf(data);\n      tags.splice(chipToDelete, 1);\n      return { tags };\n    });\n  };\n\n  handleSubmit = event => {\n    const newEvent = this.state;\n    if (newEvent.dateFrom) {\n      newEvent.dateFrom = new Date(newEvent.dateFrom);\n    }\n    if (newEvent.dateTo) {\n      newEvent.dateTo = new Date(newEvent.dateTo);\n    }\n    //keyword is a dummy variable that need not be persisted\n    delete newEvent.keyword;\n    const { firestore, toggleSnackbar } = this.props;\n    firestore\n      .add({ collection: \"events\" }, newEvent)\n      .then(res => {\n        toggleSnackbar(\"Event Added\");\n      })\n      .catch(err => console.log(err));\n    this.reset();\n    this.handleClose();\n  };\n\n  handleClose = () => {\n    this.props.close();\n  };\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Dialog\n        id=\"addEventDialog\"\n        open={this.props.open}\n        onEscapeKeyDown={this.handleClose}\n        onBackdropClick={this.handleClose}\n        onClose={this.handleClose}\n        aria-labelledby=\"form-addevent-title\"\n        fullWidth\n      >\n        <DialogTitle id=\"form-addevent-title\">Add Event</DialogTitle>\n        <DialogContent>\n          <TextField\n            id=\"name\"\n            label=\"Event Name\"\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            fullWidth\n          />\n          <TextField\n            id=\"url\"\n            label=\"URL\"\n            type=\"text\"\n            value={this.state.url}\n            onChange={this.handleChange}\n            fullWidth\n          />\n          <TextField\n            id=\"venue\"\n            label=\"Location\"\n            type=\"text\"\n            value={this.state.venue}\n            onChange={this.handleChange}\n            fullWidth\n          />\n          <TextField\n            id=\"dateFrom\"\n            label=\"From\"\n            type=\"date\"\n            value={this.state.dateFrom}\n            onChange={this.handleChange}\n          />\n          <TextField\n            id=\"dateTo\"\n            label=\"To\"\n            type=\"date\"\n            value={this.state.dateTo}\n            onChange={this.handleChange}\n          />\n          <TextField\n            id=\"description\"\n            label=\"Description\"\n            type=\"text\"\n            value={this.state.description}\n            onChange={this.handleChange}\n            fullWidth\n          />\n          {this.state.tags.map(data => {\n            return (\n              <Chip\n                key={data.key}\n                label={data.label}\n                onDelete={this.handleDelete(data)}\n                className={classes.chip}\n              />\n            );\n          })}\n          <TextField\n            id=\"keyword\"\n            label=\"Keywords\"\n            type=\"text\"\n            value={this.state.keyword}\n            onChange={this.handleChange}\n            onKeyDown={this.keyPress}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.handleSubmit} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\nAddEvent.propTypes = {\n  firestore: PropTypes.object.isRequired,\n  toggleSnackbar: PropTypes.func.isRequired\n};\n\nexport default compose(\n  firestoreConnect(),\n  connect(\n    null,\n    { toggleSnackbar }\n  )\n)(withStyles(styles)(AddEvent));\n","import React from \"react\";\nimport {\n  TextField,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  CircularProgress,\n  Grid\n} from \"@material-ui/core\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { toggleSnackbar } from \"./actions/snackbarActions\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false\n    };\n  }\n\n  handleClose = () => {\n    this.props.close();\n  };\n\n  onSnackClose = () => {\n    toggleSnackbar(\"\");\n  };\n\n  handleLogin = e => {\n    this.setState({ loading: true });\n    const { firebase, toggleSnackbar } = this.props;\n    const { email, password } = this.state;\n    firebase\n      .login({\n        email,\n        password\n      })\n      .then(() => {\n        this.setState({\n          email: \"\",\n          password: \"\"\n        });\n        toggleSnackbar(\"Login Successful\");\n      })\n      .catch(err => console.log(err))\n      .finally(() => {\n        this.setState({\n          loading: false\n        });\n        this.handleClose();\n      });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <div>\n        <Dialog\n          id=\"loginDialog\"\n          open={this.props.openLogin}\n          onEscapeKeyDown={this.handleClose}\n          onBackdropClick={this.handleClose}\n          onClose={this.handleClose}\n          fullWidth\n          aria-labelledby=\"form-login-title\"\n        >\n          {loading ? (\n            <Grid container justify=\"center\">\n              <Grid item>\n                <DialogContent>\n                  <CircularProgress />\n                </DialogContent>\n              </Grid>\n            </Grid>\n          ) : (\n            <div>\n              <DialogTitle id=\"form-login-title\">Login</DialogTitle>\n              <DialogContent>\n                <TextField\n                  margin=\"dense\"\n                  id=\"email\"\n                  label=\"Email Address\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  fullWidth\n                />\n                <TextField\n                  margin=\"dense\"\n                  id=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  fullWidth\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.handleClose} color=\"primary\">\n                  Cancel\n                </Button>\n                <Button onClick={this.handleLogin} color=\"primary\">\n                  Login\n                </Button>\n              </DialogActions>\n            </div>\n          )}\n        </Dialog>\n      </div>\n    );\n  }\n}\nLogin.propTypes = {\n  firebase: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(\n    null,\n    {\n      toggleSnackbar\n    }\n  )\n)(Login);\n","const FirebaseConfig = {\n    apiKey: \"AIzaSyCPH6InvqBkZYOD-fHeQRbnFdzWT1NMPOQ\",\n    authDomain: \"tech-conferences.firebaseapp.com\",\n    databaseURL: \"https://tech-conferences.firebaseio.com\",\n    projectId: \"tech-conferences\",\n    storageBucket: \"tech-conferences.appspot.com\",\n    messagingSenderId: \"453678731503\"\n  }\n\n  export default FirebaseConfig;","export const INCREMENT_REQUESTED = 'counter/INCREMENT_REQUESTED'\nexport const INCREMENT = 'counter/INCREMENT'\nexport const DECREMENT_REQUESTED = 'counter/DECREMENT_REQUESTED'\nexport const DECREMENT = 'counter/DECREMENT'\n\nconst initialState = {\n  count: 0,\n  isIncrementing: false,\n  isDecrementing: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT_REQUESTED:\n      return {\n        ...state,\n        isIncrementing: true\n      }\n\n    case INCREMENT:\n      return {\n        ...state,\n        count: state.count + 1,\n        isIncrementing: !state.isIncrementing\n      }\n\n    case DECREMENT_REQUESTED:\n      return {\n        ...state,\n        isDecrementing: true\n      }\n\n    case DECREMENT:\n      return {\n        ...state,\n        count: state.count - 1,\n        isDecrementing: !state.isDecrementing\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const increment = () => {\n  return dispatch => {\n    dispatch({\n      type: INCREMENT_REQUESTED\n    })\n\n    dispatch({\n      type: INCREMENT\n    })\n  }\n}\n\nexport const incrementAsync = () => {\n  return dispatch => {\n    dispatch({\n      type: INCREMENT_REQUESTED\n    })\n\n    return setTimeout(() => {\n      dispatch({\n        type: INCREMENT\n      })\n    }, 3000)\n  }\n}\n\nexport const decrement = () => {\n  return dispatch => {\n    dispatch({\n      type: DECREMENT_REQUESTED\n    })\n\n    dispatch({\n      type: DECREMENT\n    })\n  }\n}\n\nexport const decrementAsync = () => {\n  return dispatch => {\n    dispatch({\n      type: DECREMENT_REQUESTED\n    })\n\n    return setTimeout(() => {\n      dispatch({\n        type: DECREMENT\n      })\n    }, 3000)\n  }\n}\n","// import * as actions from \"../actions/\";\nimport { APPLY_FILTER } from \"../actions/types\";\n\nconst initialState = {\n  // loading: false,\n  // tableData: [],\n  tableFilterText: \"\"\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case APPLY_FILTER:\n      return {\n        ...state,\n        tableFilterText: action.payload\n      };\n    // case actions.FETCH_TABLE_DATA_REQUEST:\n    //   console.log(\"inside fetch\");\n    //   return {\n    //     ...state,\n    //     loading: true\n    //   };\n    // case actions.FETCH_TABLE_DATA_REQUEST:\n    //   console.log(\"inside fetch\");\n    //   return {\n    //     ...state,\n    //     loading: true\n    //   };\n\n    // case actions.FETCH_TABLE_DATA_REQUEST_SUCCESS:\n    //   console.log(\"after fetch success\");\n    //   return {\n    //     ...state,\n    //     loading: false,\n    //     tableData: action.payload // This payload will come from the data fetched as response from API call\n    //   };\n\n    // case actions.FETCH_TABLE_DATA_REQUEST_FAILURE:\n    //   console.log(\"after fetch failure\");\n    //   return {\n    //     ...state,\n    //     loading: false\n    //   };\n    default:\n      return state;\n  }\n};\n","import { TOGGLE_SNACKBAR } from \"../actions/types\";\n\nconst initialState = {\n  isSnackbarOpen: false,\n  snackBarText: \"\"\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case TOGGLE_SNACKBAR:\n      return {\n        ...state,\n        isSnackbarOpen: action.payload ? true : false,\n        snackBarText: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","// import { createStore, applyMiddleware, compose } from 'redux'\n// import createSagaMiddleware from 'redux-saga'\n// import { connectRouter, routerMiddleware } from 'connected-react-router'\n// import thunk from 'redux-thunk'\n// import createHistory from 'history/createBrowserHistory'\n// import rootReducer from './modules'\n// import mySaga from './sagas'\n\n// export const history = createHistory()\n\n// const initialState = {}\n// const enhancers = []\n// // const middleware = [thunk, routerMiddleware(history)]\n\n// const middleware = createSagaMiddleware()\n\n// if (process.env.NODE_ENV === 'development') {\n//   const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n//   if (typeof devToolsExtension === 'function') {\n//     enhancers.push(devToolsExtension())\n//   }\n// }\n\n// const composedEnhancers = compose(\n//   applyMiddleware(...middleware),\n//   ...enhancers\n// )\n\n// // middleware.run(mySaga)\n\n// const action = type => store.dispatch({type})\n\n// export default createStore(\n//   connectRouter(history)(rootReducer),\n//   initialState,\n//   composedEnhancers\n// )\n\n/* eslint import/no-extraneous-dependencies: [\"error\", {\"devDependencies\": true}] */\n\n// import thunk from 'redux-thunk';\n\n// import { createStore, applyMiddleware } from 'redux'\n// import createSagaMiddleware from 'redux-saga'\n\n// import reducer from './reducers'\n// import mySaga from './sagas'\n\n// // create the saga middleware\n// const sagaMiddleware = createSagaMiddleware()\n// // mount it on the Store\n// const store = createStore(\n//   reducer,\n//   applyMiddleware(sagaMiddleware)\n// )\n\n// // then run the saga\n// sagaMiddleware.run(mySaga)\n\n// import { createLogger } from \"redux-logger\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\n// import { routerMiddleware } from \"react-router-redux\";\nimport { reactReduxFirebase, firebaseReducer } from \"react-redux-firebase\";\nimport { reduxFirestore, firestoreReducer } from \"redux-firestore\";\nimport thunk from \"redux-thunk\";\n// import { createBrowserHistory } from \"history\";\n// import createSagaMiddleware from \"redux-saga\";\nimport firebase from \"firebase\";\n\nimport \"firebase/firestore\";\n// import mySaga from \"./sagas\";\nimport FirebaseConfig from \"./config/keys\";\nimport counter from \"./modules/counter\";\nimport tableReducer from \"./modules/tableReducer\";\nimport snackbarReducer from \"./modules/snackbarReducer\";\n\n// const sagaMiddleware = createSagaMiddleware();\n\n// Create the history object\n// const history = createBrowserHistory();\n\n// export default function configureStore(initialState, history) {\n\n//BEGIN FIREBASE PREREQUISITE\nfirebase.initializeApp(FirebaseConfig);\n\n//react-redux-firebase config\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFireStoreForProfile: true\n};\n\n//initialize Firestore\nconst firestore = firebase.firestore();\nconst settings = { timestampsInSnapshots: true };\nfirestore.settings(settings);\n\n// Add reactReduxFirebase enhancer when making store creator\nconst createStoreWithFirebase = compose(\n  reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\n  reduxFirestore(firebase) // <- needed if using firestore\n)(createStore);\n\n// Add firebase to reducers\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer, // <- needed if using firestore\n  counter,\n  table: tableReducer,\n  snackbar: snackbarReducer\n});\n//END FIREBASE PREREQUISITE\n\n// const logger = createLogger();\n\n// Build the middleware for intercepting and dispatching navigation actions\n// const reduxRouterMiddleware = routerMiddleware(history);\n\nconst middleware = applyMiddleware(\n  // sagaMiddleware,\n  //   logger,\n  // reduxRouterMiddleware,\n  thunk\n);\n\n// Add the reducer to your store on the `router` key\n// Also apply our middleware for navigating\n// const store = createStore(rootReducer, initialState, middlewareWithDevTools,\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//     );\nconst initialState = {};\n\n//Use compose in case of absence of Redux DevTools\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : compose;\n\nconst store = createStoreWithFirebase(\n  rootReducer,\n  initialState,\n  composeEnhancers(reactReduxFirebase(firebase), middleware)\n);\n// if (module.hot) {\n//   module.hot.accept(\"../reducers\", () => {\n//     const nextRootReducer = require(\"../reducers/index\"); // eslint-disable-line global-require\n\n//     store.replaceReducer(nextRootReducer);\n//   });\n// }\n// sagaMiddleware.run(mySaga);\n\nexport default store;\n// }\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { toggleSnackbar } from \"./actions/snackbarActions\";\nimport PropTypes from \"prop-types\";\n\nclass MessageBar extends Component {\n  handleSnackClose = () => {\n    this.props.toggleSnackbar(\"\");\n  };\n  render() {\n    const { isSnackbarOpen, snackMessage } = this.props;\n    return (\n      <div>\n        <Snackbar\n          open={isSnackbarOpen}\n          autoHideDuration={2000}\n          onClose={this.handleSnackClose}\n          message={<span>{snackMessage}</span>}\n        />\n      </div>\n    );\n  }\n}\n\nMessageBar.propTypes = {\n  toggleSnackbar: PropTypes.func.isRequired,\n  isSnackBarOpen: PropTypes.bool,\n  snackMessage: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  isSnackbarOpen: state.snackbar.isSnackbarOpen,\n  snackMessage: state.snackbar.snackBarText\n});\n\nexport default connect(\n  mapStateToProps,\n  { toggleSnackbar }\n)(MessageBar);\n","import React, { Component } from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport {\n  withStyles,\n  Table,\n  TableCell,\n  TableHead,\n  Paper,\n  Button\n} from \"@material-ui/core/\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { orderBy } from \"lodash\";\nimport \"typeface-roboto\";\nimport { applyFilter } from \"./actions/filterActions\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 700\n  }\n});\n\nclass EventWordCloud extends Component {\n  onWordClick = word => {\n    this.props.applyFilter(word.text);\n  };\n\n  render() {\n    const { events, classes } = this.props;\n    let eventTagMap = [];\n\n    if (events && events.length > 0) {\n      for (var i = 0; i < events.length; i++) {\n        const eventWords =\n          events[i].tags &&\n          events[i].tags.length &&\n          events[i].tags.map(tag => tag.label);\n        if(eventWords && eventWords.length > 0){\n          for (var j = 0; j < eventWords.length; j++) {\n          //Look for duplicate tags in main event tag map\n          const duplicateEvent = eventTagMap.filter(\n            eventData => eventData.text === eventWords[j]\n          );\n          //If the tag has not already been added, created a new entry with count as 1\n          if (!duplicateEvent.length) {\n            eventTagMap.push({\n              text: eventWords[j],\n              count: 1\n            });\n          } else {\n            //Increment the count of the tag\n            for (var k = 0; k < eventTagMap.length; k++) {\n              if (eventTagMap[k].text === eventWords[j]) {\n                eventTagMap[k].count += 1;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n    //keep max of 10 keywords, sorted by count, descending\n    if (eventTagMap && eventTagMap.length) {\n      eventTagMap = orderBy(eventTagMap, \"count\", \"desc\").slice(0, 10);\n    }\n\n    return (\n      <div>\n        {eventTagMap && eventTagMap.length ? (\n          <Paper className={classes.root}>\n            <Table className={classes.table} padding=\"dense\">\n              <TableHead className=\"THeader\">\n                <TableCell className=\"Trending\">Trending</TableCell>\n                {eventTagMap.map(word => (\n                  <TableCell>\n                    <Button\n                      key={word.text}\n                      padding=\"default\"\n                      onClick={this.onWordClick.bind(this, word)}\n                    >\n                      {word.text}\n                    </Button>\n                  </TableCell>\n                ))}\n              </TableHead>\n            </Table>\n          </Paper>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  events: state.firestore.ordered.events\n});\n\nexport default compose(\n  firestoreConnect([{ collection: \"events\" }]),\n  connect(\n    mapStateToProps,\n    { applyFilter }\n  )\n)(withStyles(styles)(EventWordCloud));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Board from \"./Board\";\nimport NavBar from \"./Navbar\";\nimport AddEvent from \"./AddEvent\";\nimport Login from \"./Login\";\nimport store from \"./store\";\nimport MessageBar from \"./MessageBar\";\nimport EventWordCloud from \"./EventWordCloud\";\nimport data from \"./data.json\";\n\nimport { Provider } from \"react-redux\";\n\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  state = {\n    open: false,\n    openLogin: false,\n    list: data\n  };\n  componentDidMount() {\n    this.initState();\n  }\n  initState = () => {\n    this.setState({ list: data });\n  };\n  updateList = name => {\n    let filterList = data.filter(item => {\n      if (item.name === name) {\n        return true;\n      }\n    });\n    filterList === undefined || filterList.length === 0\n      ? this.initState()\n      : this.setState({ list: filterList });\n  };\n  openForm = () => {\n    this.setState({ open: true });\n  };\n  openLoginForm = () => {\n    this.setState({ openLogin: true });\n  };\n  closeForm = () => {\n    this.setState({ open: false, openLogin: false });\n  };\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <NavBar\n            open={this.openForm.bind(this)}\n            openLogin={this.openLoginForm.bind(this)}\n            update={this.updateList.bind(this)}\n          />\n          <EventWordCloud />\n          <Board list={this.state.list} />\n\n          <AddEvent open={this.state.open} close={this.closeForm.bind(this)} />\n          <Login\n            openLogin={this.state.openLogin}\n            close={this.closeForm.bind(this)}\n          />\n          <MessageBar />\n        </div>\n      </Provider>\n    );\n  }\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}